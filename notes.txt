ebook-convert.exe input_file output_file [options]

new path for ebook-convert
checkbox to use ebook-convert

options
    --base-font-size=BASE_FONT_SIZE
    --margin-top=MARGIN_TOP
                        Set the top margin in pts. Default is 5.0. Note: 72
                        pts equals 1 inch

    --margin-left=MARGIN_LEFT
                        Set the left margin in pts. Default is 5.0. Note: 72
                        pts equals 1 inch

    --margin-right=MARGIN_RIGHT
                        Set the right margin in pts. Default is 5.0. Note: 72
                        pts equals 1 inch

    --margin-bottom=MARGIN_BOTTOM
                        Set the bottom margin in pts. Default is 5.0. Note: 72
                        pts equals 1 inch

--title=TITLE       Set the title.

    --authors=AUTHORS   Set the authors. Multiple authors should be separated
                        by ampersands.


 --output-profile=OUTPUT_PROFILE
                        Specify the output profile. The output profile tells
                        the conversion system how to optimize the created
                        document for the specified device. In some cases, an
                        output profile is required to produce documents that
                        will work on a device. For example EPUB on the SONY
                        reader. Choices are:default, sony, msreader,
                        mobipocket, hanlinv3, cybookg3, kindle, sony-
                        landscape, kindle_dx


icon in addons page
better icons for pref page
downloads liek view
common pref code
common string code



editor


pref for default format

dialog

title
author
filename
outputformat

show dialog

url to ebook

get url
get author
get title



createBookit(string content, bool isURL, string author, string title)

if show option, show dialog

create thread with parameters

create thread
=============

inside thread

create guid for unique run
create log file

create temp working directory

if block of text save to file
else
run web2disk
get primary filename

get output filetype and extension
create output filename

convert file

add to calibre

launch calibre

function GetMetaValue(meta_name) {

    var my_arr=document.getElementsByTagName("META");
    for (var counter=0; counter<my_arr.length; counter++) {
        if (my_arr[counter].name.toLowerCase() == meta_name.toLowerCase()) {
           return my_arr[counter].content;
           }
    }
    return "";

}

document.write ("META Author is: "+GetMetaValue('author'));
document.write ("<br />META Description is: "+GetMetaValue('description'));
document.write ("<br />META invalid name is: "+GetMetaValue('foobar'));
import log contents, outputfile into db keyed by guid
=============

each step use wrapper to create batch/shell script, run blocking, delete batch/script
view for jobs
callback via observer from thread to jobs to update status
look at redirecting to log file when launching batch/script

look at proxies for use in notifcation from thread to thread

list of all settings:

options dialog
==============
author 
title 
output dir
add to calibre
launch calibre

global settings
===============
default author
show options dialog
output dir
add to calibre
launch calibre

Paths
=====
path to calibre
path to calibredb
web2disk
html2epub
html2lrf
any2mobi

Saving
======
max recursions 1 default
max files 0 for default (not used)
delay 0 defult

layout
======
left margin
right margin
top margin
bottom margin

base font size (12.0 default)

LRF
===
bool ignore tables
bool header 
string headerformat=


ePub
====


Mobi
====
bool ignore tables

popup for output type, filename, author, title

common menu
===========
selection to ebook (if selected)
selection to editor (if selected)
create ebook
Editor
Log
options

string format code
js log code

